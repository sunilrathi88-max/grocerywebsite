name: Cypress E2E Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run tests nightly at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        browser: [chrome, firefox, edge]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build application
        run: npm run build
      
      - name: Start dev server
        run: npm run dev &
        env:
          CI: true
      
      - name: Wait for server
        run: npx wait-on http://localhost:3001 --timeout 60000
      
      - name: Run Cypress tests
        uses: cypress-io/github-action@v6
        with:
          browser: ${{ matrix.browser }}
          wait-on: 'http://localhost:3001'
          wait-on-timeout: 120
          record: false
          config-file: cypress.config.ts
        env:
          CYPRESS_baseUrl: http://localhost:3001
      
      - name: Upload screenshots
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots-${{ matrix.browser }}
          path: cypress/screenshots
          retention-days: 7
      
      - name: Upload videos
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: cypress-videos-${{ matrix.browser }}
          path: cypress/videos
          retention-days: 7
      
      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: cypress-results-${{ matrix.browser }}
          path: cypress/results
          retention-days: 30

  percy-visual-tests:
    runs-on: ubuntu-latest
    needs: cypress-run
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Start dev server
        run: npm run dev &
        env:
          CI: true
      
      - name: Wait for server
        run: npx wait-on http://localhost:3001 --timeout 60000
      
      - name: Run Percy visual tests
        run: npm run percy:snapshot
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
      
      - name: Upload Percy results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: percy-results
          path: .percy
          retention-days: 30

  lighthouse-ci:
    runs-on: ubuntu-latest
    needs: cypress-run
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build application
        run: npm run build
      
      - name: Install Lighthouse CI
        run: npm install -g @lhci/cli
      
      - name: Start preview server
        run: npm run preview &
        env:
          CI: true
      
      - name: Wait for preview server
        run: npx wait-on http://localhost:4173 --timeout 60000
      
      - name: Run Lighthouse CI
        run: lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
      
      - name: Upload Lighthouse results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: lighthouse-results
          path: .lighthouseci
          retention-days: 30

  test-summary:
    runs-on: ubuntu-latest
    needs: [cypress-run, lighthouse-ci]
    if: always()
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
      
      - name: Create test summary
        run: |
          echo "## Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Cypress E2E Tests" >> $GITHUB_STEP_SUMMARY
          echo "- Browser Matrix: Chrome, Firefox, Edge" >> $GITHUB_STEP_SUMMARY
          echo "- Test Suites: 7 files" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Lighthouse CI" >> $GITHUB_STEP_SUMMARY
          echo "- Performance budget checks completed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "âœ… All tests completed successfully!" >> $GITHUB_STEP_SUMMARY
